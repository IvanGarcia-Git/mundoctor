const a=i=>new Promise(e=>setTimeout(e,i));let t=[{id:1,name:"Consulta general",description:"Consulta médica general para diagnóstico y tratamiento",duration:30,price:50,patientsPerDay:8,appointmentsPerDay:16,professionalId:"prof1",isActive:!0},{id:2,name:"Seguimiento",description:"Consulta de seguimiento para pacientes en tratamiento",duration:20,price:30,patientsPerDay:12,appointmentsPerDay:24,professionalId:"prof1",isActive:!0},{id:3,name:"Primera consulta",description:"Consulta inicial con historia clínica completa",duration:45,price:70,patientsPerDay:6,appointmentsPerDay:10,professionalId:"prof1",isActive:!0}];const o={getServices:async i=>(await a(500),t.filter(e=>e.professionalId===i&&e.isActive)),getService:async i=>(await a(500),t.find(e=>e.id===i&&e.isActive)||null),createService:async(i,e)=>{await a(500);const n={...e,id:Math.max(...t.map(r=>r.id),0)+1,professionalId:i,isActive:!0};return t.push(n),n},updateService:async(i,e)=>{await a(500);const n=t.findIndex(r=>r.id===i);if(n===-1)throw new Error("Servicio no encontrado");return t[n]={...t[n],...e},t[n]},deleteService:async i=>{await a(500);const e=t.findIndex(n=>n.id===i);if(e===-1)throw new Error("Servicio no encontrado");t[e].isActive=!1}};export{o as s};
