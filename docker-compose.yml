services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic:/etc/traefik/dynamic:ro
      - ./traefik/acme:/etc/traefik/acme
    environment:
      - TZ=Europe/Madrid
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.todostore.es`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth@file"
    networks:
      - proxy

  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mundoctor-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - VITE_CLERK_PUBLISHABLE_KEY=${VITE_CLERK_PUBLISHABLE_KEY:-pk_test_c2FjcmVkLXBhcnJvdC03Mi5jbGVyay5hY2NvdW50cy5kZXYk}
      - VITE_API_URL=https://api.todostore.es
    labels:
      - "traefik.enable=true"
      # Main domain
      - "traefik.http.routers.frontend.rule=Host(`todostore.es`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # Security headers
      - "traefik.http.routers.frontend.middlewares=secure-headers"
      - "traefik.http.middlewares.secure-headers.headers.framedeny=true"
      - "traefik.http.middlewares.secure-headers.headers.sslredirect=true"
      - "traefik.http.middlewares.secure-headers.headers.stsseconds=315360000"
      - "traefik.http.middlewares.secure-headers.headers.stsincludesubdomains=true"
      - "traefik.http.middlewares.secure-headers.headers.stspreload=true"
      - "traefik.http.middlewares.secure-headers.headers.forcestsheader=true"
      - "traefik.http.middlewares.secure-headers.headers.contenttypenosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.browserxssfilter=true"
      - "traefik.http.middlewares.secure-headers.headers.referrerpolicy=strict-origin-when-cross-origin"
    networks:
      - proxy

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mundoctor-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/mundoctor?sslmode=disable}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY:-sk_test_NxM4E97lcL0aSnq0ffLQ7zZjf36215bFhvPYN7OkHG}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - TWILIO_PHONE_NUMBER=${TWILIO_PHONE_NUMBER}
    labels:
      - "traefik.enable=true"
      # API subdomain
      - "traefik.http.routers.backend.rule=Host(`api.todostore.es`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      # CORS and security
      - "traefik.http.routers.backend.middlewares=cors-headers"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,PATCH,OPTIONS"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolalloworigin=https://todostore.es"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolallowheaders=Origin,Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors-headers.headers.accesscontrolmaxage=86400"
    networks:
      - proxy
    depends_on:
      - postgres

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: mundoctor-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-mundoctor}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations-consolidated:/docker-entrypoint-initdb.d
    networks:
      - proxy
    # Only expose to internal network for security
    # ports:
    #   - "5432:5432"

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: mundoctor-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultredispassword}
    volumes:
      - redis_data:/data
    networks:
      - proxy

  # Database administration (optional, for staging/development)
  adminer:
    image: adminer:latest
    container_name: mundoctor-adminer
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.rule=Host(`db.todostore.es`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls.certresolver=letsencrypt"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
      # Basic auth for security
      - "traefik.http.routers.adminer.middlewares=db-auth"
      - "traefik.http.middlewares.db-auth.basicauth.users=admin:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
    networks:
      - proxy
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:

networks:
  proxy:
    external: false